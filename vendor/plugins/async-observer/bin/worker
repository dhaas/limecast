#!/usr/bin/env ruby
# async-observer - Rails plugin for asynchronous job execution

# Copyright (C) 2007 Philotic Inc.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# Use the same pointer (and therefore same buffer) for stdout and stderr.
# $VERBOSE = nil; STDERR = $stderr = STDOUT = $stdout; $VERBOSE = false

require 'time'
require File.dirname(__FILE__) + '/../lib/simple-daemon'

RAILS_ROOT = File.expand_path(File.dirname(__FILE__) + '/../../../..')

class Async < SimpleDaemon::Base

  SimpleDaemon::WORKING_DIRECTORY = "#{RAILS_ROOT}/tmp/pids"

  def self.start
    # Rails initialization.
    # We do this here instead of using script/runner because script/runner
    # breaks __FILE__, which we use below.
    begin
      puts "#!load-rails!begin!#{Time.now.utc.xmlschema(6)}"
      require RAILS_ROOT + '/config/boot'
      require RAILS_ROOT + '/config/environment'
    ensure
      puts "#!load-rails!end!#{Time.now.utc.xmlschema(6)}"
    end

    require 'async_observer/worker'
    AsyncObserver::Worker.new(binding).run()
  end

  def self.stop
    puts "Stopping async_observer"
    super
  end
end

Async.daemonize
